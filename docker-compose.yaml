version: '3'
networks:
  backbone:
        ipam:
            driver: default
            config:
                - subnet: 172.28.0.0/16
  proxy:
        ipam:
            driver: default
            config:
                - subnet: 172.29.0.0/16
  paperless:

services:
 openldap:
    image: osixia/openldap:latest
    networks:
     - backbone
    container_name: openldap
    restart: always
    environment:
      LDAP_LOG_LEVEL: ${LDAP_LOG_LEVEL}
      LDAP_ORGANISATION: ${LDAP_ORGANISATION}
      LDAP_DOMAIN: ${LDAP_DOMAIN}
      LDAP_BASE_DN: ${LDAP_BASE_DN}
      LDAP_ADMIN_PASSWORD: ${LDAP_ADMIN_PASSWORD}
      LDAP_CONFIG_PASSWORD: ${LDAP_CONFIG_PASSWORD}
      LDAP_READONLY_USER: ${LDAP_READONLY_USER}
      LDAP_RFC2307BIS_SCHEMA: ${LDAP_RFC2307BIS_SCHEMA}
      LDAP_BACKEND: ${LDAP_BACKEND}
      LDAP_TLS: ${LDAP_TLS}
      LDAP_TLS_CRT_FILENAME: ${LDAP_TLS_CRT_FILENAME}
      LDAP_TLS_KEY_FILENAME: ${LDAP_TLS_KEY_FILENAME}
      LDAP_TLS_DH_PARAM_FILENAME: ${LDAP_TLS_DH_PARAM_FILENAME}
      LDAP_TLS_CA_CRT_FILENAME: ${LDAP_TLS_CA_CRT_FILENAME}
      LDAP_TLS_ENFORCE: ${LDAP_TLS_ENFORCE}
      LDAP_TLS_CIPHER_SUITE: ${LDAP_TLS_CIPHER_SUITE}
      LDAP_TLS_VERIFY_CLIENT: ${LDAP_TLS_VERIFY_CLIENT}
      LDAP_REPLICATION: ${LDAP_REPLICATION}
      KEEP_EXISTING_CONFIG: ${LDAP_EXISTING_CONFIG}
      LDAP_REMOVE_CONFIG_AFTER_SETUP: ${LDAP_REMOVE_CONFIG_AFTER_SETUP}
      LDAP_SSL_HELPER_PREFIX: ${LDAP_SSL_HELPER_PREFIX}
    tty: true
    stdin_open: true
    volumes:
      - ldap:/var/lib/ldap
      - ldapd:/etc/ldap/slapd.d
      - ldapcerts:/container/service/slapd/assets/certs/
    ports:
      - ${LDAP_PORT_1}:${LDAP_PORT_1}
      - ${LDAP_PORT_2}:${LDAP_PORT_2}
    # For replication to work correctly, domainname and hostname must be
    # set correctly so that "hostname"."domainname" equates to the
    # fully-qualified domain name for the host.

 phpldapadmin:
    image: osixia/phpldapadmin:latest
    restart: always
    networks:
     - backbone
    container_name: ldap-ui
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: ${PHPLDAPADMIN_LDAP_HOSTS}
      PHPLDAPADMIN_HTTPS: ${PHPLDAPADMIN_HTTPS}
    ports:
      - ${PHPLDAPADMIN_HTTP_PORT}:80
    depends_on:
      - openldap

 nextcloud-db:
  image: mariadb:${MYSQL_VERSION}
  networks:
   - backbone
  container_name: nextcloud-db-mysql
  restart: always
  volumes:
   - nextclouddb:/var/lib/mysql
  environment:
    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    MYSQL_DATABASE: ${MYSQL_DATABASE}
    MYSQL_USER: ${MYSQL_USER}

 nextcloud:
  image: nextcloud:${VERSION_TAG}
  networks:
   - backbone
   - paperless
  container_name: nextcloud-app
  restart: always
  ports:
   - ${NC_PORT}:80
  depends_on:
   - nextcloud-db
   - openldap
   - redis-cache
   - collabora
  environment:
    REDIS_HOST: ${REDIS_HOST}
    REDIS_HOST_PASSWORD: ${REDIS_HOST_PASSWORD}
    PUID: ${PUID}
    PGID: ${PGID}
    NEXTCLOUD_INIT_HTACCESS: ${NEXTCLOUD_INIT_HTACCESS}
    PHP_MEMORY_LIMIT: ${PHP_MEMORY_LIMIT}
    MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    MYSQL_DATABASE: ${MYSQL_DATABASE}
    MYSQL_USER: ${MYSQL_USER}
  volumes:
   - ncconfig:/var/www/html/config
   - ncdata:/var/www/html/data
   - ncapps:/var/www/html/apps
   - nccustom_apps:/var/www/html/custom_apps
   - paperless-app-media:/var/www/paperless-media
   - paperless-app-consume:/var/www/paperless-consume

 redis-cache:
    image: redis:6.2-alpine
    container_name: redis-cache
    networks:
     - backbone
    restart: always
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_HOST_PASSWORD}
    volumes:
      - redisdata:/data

 paperless-db:
    image: postgres:${POSTGRES_VERSION_TAG}
    container_name: paperless-db
    restart: unless-stopped
    volumes:
      - paperless-db:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    networks:
      - paperless

 paperless-app:
    image: paperlessngx/paperless-ngx:latest
    container_name: paperless-app
    ports:
      - ${PAPERLESS_PORT}:8000
    restart: unless-stopped
    depends_on:
      - paperless-db
      - redis-cache
    healthcheck:
      test: ["CMD", "curl", "-f", "${PAPERLESS_FQDN}"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - paperless-app-data:/usr/src/paperless/data
      - paperless-app-media:/usr/src/paperless/media
      - paperless-app-consume:/usr/src/paperless/consume
   # env_file: docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://default:${REDIS_HOST_PASSWORD}@${REDIS_HOST}:ยง{REDIS_PORT}
      PAPERLESS_DBHOST: ${PAPERLESS_DBHOST}
      PAPERLESS_SECRET_KEY: ${PAPERLESS_SECRET_KEY}
      PAPERLESS_ADMIN_USER: ${PAPERLESS_ADMIN_USER}
      PAPERLESS_ADMIN_PASSWORD: ${PAPERLESS_ADMIN_PASSWORD}
      PAPERLESS_URL: ${PAPERLESS_URL}
      PAPERLESS_OCR_LANGUAGE: ${PAPERLESS_OCR_LANGUAGE}
      PAPERLESS_TIME_ZONE: ${PAPERLESS_TIME_ZONE}
      PAPERLESS_TASK_WORKERS: ${PAPERLESS_TASK_WORKERS}
      PAPERLESS_THREADS_PER_WORKER: ${PAPERLESS_THREADS_PER_WORKER}
      PAPERLESS_CONSUMPTION_DIR: ${PAPERLESS_CONSUMPTION_DIR}
      PAPERLESS_TIKA_ENABLED: ${PAPERLESS_TIKA_ENABLED}
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: ${PAPERLESS_TIKA_GOTENBERG_ENDPOINT}
      PAPERLESS_TIKA_ENDPOINT: ${PAPERLESS_TIKA_ENDPOINT}
      PAPERLESS_OCR_MAX_IMAGE_PIXELS: ${PAPERLESS_OCR_MAX_IMAGE_PIXELS}
      PUID: ${PAPERLESS_PUID}
      PGID: ${PAPERLESS_PGID}
    networks:
      - paperless
      - backbone

 paperless-tika:
    image: ghcr.io/paperless-ngx/tika:latest
    container_name: paperless-tika
    networks:
      - paperless

 paperless-gotenberg:
    image: docker.io/gotenberg/gotenberg:7.10
    container_name: paperless-gotenberg
    restart: always
    networks:
      - paperless
    command:
      - "gotenberg"
      - "--chromium-disable-javascript=true"
      - "--chromium-allow-list=file:///tmp/.*"

 coturn:
    image: instrumentisto/coturn
    container_name: coturn
    restart: unless-stopped
    ports:
      - "3478:3478/tcp"
      - "3478:3478/udp"
    networks:
      - backbone
    command:
      - -n
      - --log-file=stdout
      - --min-port=49160
      - --max-port=49200
      - --realm=nc.yourlocalcloud.de
      - --use-auth-secret
      - --static-auth-secret=eYVX7EwVmmxKPCDmwMtyK

 collabora:
    image: collabora/code
    container_name: collabora
    restart: always
    ports:
      - 127.0.0.1:9980:9980
    cap_add:
      - MKNOD
    environment:
      - domain=${DOMAIN}
      - username=${COLLABORA_USER}
      - password=${COLLABORA_PASSWORD}
      - VIRTUAL_HOST=${COLLABORA_HOST}
      - VIRTUAL_NETWORK=${COLLABORA_NETWORK}
      - VIRTUAL_PORT=${COLLABORA_PORT}
      - VIRTUAL_PROTO=${COLLABORA_PROT}
      - ssl.enable=false
      - ssl.termination=true
    networks:
      - backbone

 reverseproxy:
    image: 'jc21/nginx-proxy-manager:latest'
    container_name: reverseproxy-manager
    restart: always
    networks:
        backbone:
            ipv4_address: 172.28.1.1
        proxy:
            ipv4_address: 172.29.1.1
        paperless:
    ports:
        - '80:80'
        - '81:81'
        - '443:443'
    volumes:
        - revproxdata:/data
        - revproxletsencrypt:/etc/letsencrypt

volumes:
  # ldap volumes
  ldap:
  ldapd:
  ldapcerts:
  # nextcloud volumes
  nextclouddb:
  ncconfig:
  ncdata:
  ncapps:
  nccustom_apps:
  redisdata:
  # proxy manager volumes
  revproxdata:
  revproxletsencrypt:
  # paperless volumes
  paperless-config:
  paperless-db:
  paperless-app-data:
  paperless-app-media:
  paperless-app-consume:
  tika-config:
